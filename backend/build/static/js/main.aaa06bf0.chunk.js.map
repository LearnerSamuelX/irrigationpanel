{"version":3,"sources":["logo.svg","component/homepage.js","component/logincomponent.js","component/signupcomponent.js","component/citysearch.js","component/userpanel/mainmenu.js","component/userpanel/radar.js","component/userpanel/dashboard.js","component/userpanel/analog.js","component/userspanel.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Homepage","id","to","Component","Logincomponent","props","onChangeUsername_JSX","onChangeUsername","bind","onChangePassword_JSX","onChangePassword","onSubmit","state","username","password","e","this","setState","target","value","preventDefault","alert","user_info","username_2","password_2","axios","post","then","res","console","log","data","history","push","type","onChange","onClick","Signupcomponent","onChangePassword_2","all","get","CitySearch","onChangeCityName","onChangeCountry","citySearch","cityName","country","loaded","searchCity","MainMenu","cityname","countryname","require","config","Radar","googleMap","React","createRef","datasource","name","cityCoordinate","coord","lon","lat","winddirection","wind","deg","cityPool","borderLine","zoneData","window","google","maps","Map","current","zoom","center","lng","disableDefaultUI","Marker","position","map","map_1","citypool_coordinates","i","location","color_pool","length","Polyline","path","geodesic","strokeColor","strokeOpacity","strokeWeight","j","setTimeout","className","ref","style","width","height","Dashboard","angle","display","increment","range","total","nominal","pinMovement","transform","unit","title","Analog","temperature","Math","round","main","temp","humidity","windspeed","speed","UsersPanel","weatherdata","sys","exact","App","component","LoginComponent","SignUpComponent","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.aaa06bf0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.78fda65f.svg\";","import React, { Component } from 'react';\nimport {Link} from \"react-router-dom\"\nimport '../stylessheet/homepage.css'\n\nclass Homepage extends Component {\n    render(){\n        return(\n            <div id='homepage-container'>\n                <h1>Irrigation Panel</h1>\n                    <div id='homepage-button-containter'>\n                        <Link to=\"/Login\">\n                            <button>Login</button>\n                        </Link>\n\n                        <Link to=\"/SignUp\">\n                            <button>Sign Up</button>\n                        </Link>\n                    </div>\n            </div>\n        )\n    }\n}\n\nexport default Homepage;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport '../stylessheet/login.css'\n\nclass Logincomponent extends Component{\n    constructor(props){\n        super(props);\n        //initialize method here methods here\n        this.onChangeUsername_JSX = this.onChangeUsername.bind(this);\n        this.onChangePassword_JSX= this.onChangePassword.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n        // define states here\n        this.state={\n            username:\"\",\n            password:\"\",\n        }\n    }\n\n         //define methods here\n         onChangeUsername(e) {\n            this.setState({\n                username:e.target.value\n            })\n        }\n\n        onChangePassword(e) {\n            this.setState({\n                password:e.target.value\n            })\n        }\n\n        onSubmit(e){\n            e.preventDefault();\n            if(this.state.username===\"\"||this.state.password===\"\"){\n                alert('Please fill in the required info to log in')\n            }else{\n                let user_info = {\n                    username_2:this.state.username,\n                    password_2:this.state.password\n                }\n                axios.post('http://localhost:5000/weather/loggedin',user_info).then((res)=>{\n                    console.log(res.data)\n                })\n                let path ='userspanel'\n                this.props.history.push(path);\n            }\n\n        }\n\n    render(){\n        return(\n            <div id='login-container'>\n                <form id='form-container'>\n                    <div id='username'>\n                        <label>Username:</label>\n                        <input type='text'value={this.state.username} onChange={this.onChangeUsername_JSX}></input>\n                    </div>\n                    <div id='password'>\n                        <label>Password:</label>\n                        <input type='password'value={this.state.password} onChange={this.onChangePassword_JSX}></input>\n                    </div>\n                    <button onClick={this.onSubmit}>Login</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Logincomponent;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport {useHistory} from 'react-router-dom'\n\nclass Signupcomponent extends Component{\n\n    // using axios to interact with server because we need to practice how to use state\n    constructor(props){\n        super(props);\n        //initialize method here methods here\n        this.onChangeUsername = this.onChangeUsername.bind(this);\n        this.onChangePassword = this.onChangePassword.bind(this);\n        this.onChangePassword_2 = this.onChangePassword_2.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n        // define states here\n        this.state={\n            username:\"\",\n            password:\"\",\n            password_2:\"\",\n        }\n    }\n\n        //define methods here\n        onChangeUsername(e) {\n            this.setState({\n                username:e.target.value\n            })\n        }\n\n        onChangePassword(e) {\n            this.setState({\n                password:e.target.value\n            })\n        }\n\n        onChangePassword_2(e) {\n            this.setState({\n                password_2:e.target.value\n            })\n        }\n\n        onSubmit(e) {\n            e.preventDefault();\n            //validate user input\n            if (this.state.password!==this.state.password_2){\n                alert(\"Passwords don't match. Please type again\")\n            }else if(this.state.username===\"\"||this.state.password===\"\"||this.state.password_2===\"\"){\n                alert(\"Missing information\")\n            }else{\n                let user_info = {\n                    username:this.state.username,\n                    password:this.state.password,\n                }\n                axios.all([\n                    axios.post('http://localhost:5000/weather/usercreated',user_info),\n                    axios.get('http://localhost:5000/weather/loggedin')\n                ]).then(res=>{\n                    console.log(res[0].data)\n                })\n\n                let path ='citySearch'\n                this.props.history.push(path);\n            }\n        }    \n    \n    render(){\n        return(\n            <div id='login-container'>\n                <form id='form-container'>\n                    <div id='username'>\n                        <label>Username:</label>\n                        <input type='text'value={this.state.username} onChange={this.onChangeUsername}></input>\n                    </div>\n                    <div id='password'>\n                        <label>Password:</label>\n                        <input id='input-1'type='password'value={this.state.password} onChange={this.onChangePassword}></input>\n                        <label>Confirm Password:</label>\n                        <input type='password'value={this.state.password_2} onChange={this.onChangePassword_2}></input>\n                    </div>\n                    <button onClick={this.onSubmit}>Sign Up</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Signupcomponent;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport '../stylessheet/citysearch.css'\n\nclass CitySearch extends Component{\n    constructor(props){\n        super(props);\n\n        //initilize methods\n        this.onChangeCityName = this.onChangeCityName.bind(this)\n        this.onChangeCountry = this.onChangeCountry.bind(this)\n        this.citySearch = this.citySearch.bind(this)\n\n        //define states\n        this.state={\n            username:\"\",\n            cityName:\"\",\n            country:\"\",\n            loaded:false\n        }\n    }\n\n    componentDidMount(){\n        axios.get('http://localhost:5000/weather/loggedin').then((res)=>{\n            if(res.data===\"Error\"){\n                console.log('hahaha'+res)\n                this.setState({\n                    username:\"Error\",\n                    loaded:true\n                })\n            }else{\n                console.log(res.data)\n                this.setState({\n                    username:res.data.username,\n                    loaded:true\n                })\n            }\n        })\n    }\n\n    onChangeCityName(e){\n        this.setState({\n            cityName:e.target.value\n        })\n    }\n\n    onChangeCountry(e){\n        this.setState({\n            country:e.target.value\n        })\n    }\n\n    citySearch(e){\n        e.preventDefault();\n        const searchCity = {\n            cityName:this.state.cityName,\n            country:this.state.country\n        }\n\n        axios.post('http://localhost:5000/weather/loggedin/citySearch',searchCity)\n        // .then((res)=>{\n        //     console.log(res.data)\n        // })\n\n        let path = 'userspanel'\n        this.props.history.push(path);\n\n    }\n\n    render(){ \n        if(this.state.username===\"\"&&this.state.loaded===false){\n            return(\n                <div>\n                    <p>Loading Data</p>\n                </div>\n            )\n        }else if(this.state.username===\"Error\"&&this.state.loaded===true){\n            return(\n                <div>\n                    <h3>Please login into the system first</h3>\n                </div>\n            )\n        }else{\n            return(\n                <div id='greeting'>\n                    <h1>Hello,  {this.state.username}!</h1>\n                    \n                    <form id='city-search-container'>\n                        <div id='city-search'>\n                        <p>Enter your city: </p>    \n                        <input type='text'value={this.state.cityName}onChange={this.onChangeCityName}></input>\n                        </div>\n                        <div id='country-search'>\n                        <p>Enter your Country: </p>    \n                        <input type='text'value={this.state.country}onChange={this.onChangeCountry}></input>\n                        </div>\n                        <button onClick={this.citySearch}>Search</button>\n                    </form>\n                    \n                </div>\n            )\n        }\n    }\n}\n\nexport default CitySearch;","import React, { Component } from 'react';\nimport { BrowserRouter as Router,Link} from \"react-router-dom\" ;\nimport '../../stylessheet/mainmenu.css'\n\nclass MainMenu extends Component{\n    constructor(props){\n        super(props)\n    \n\n        this.state={\n            cityname:\"\",\n            countryname:\"\",\n        }\n    \n    }\n\n    render(){\n        return(\n            <div id='main-container'>\n                <h2>Main Menu</h2>\n                <div id='link-container'>\n                    <Link to=\"/userspanel/radar\">\n                            <button>Radar</button>\n                    </Link>\n                    <Link to=\"/userspanel/analog\">\n                            <button>Analog</button>\n                    </Link>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default MainMenu;","import React, { Component,createRef} from 'react';\nimport axios from 'axios';\nimport '../../stylessheet/radar.css'\n\nrequire('dotenv').config();\n\nclass Radar extends Component{\n    constructor(props){\n        super(props)\n        //initialize methods here\n        this.googleMap = React.createRef()\n\n        //define states here\n        this.state = {\n            cityname:this.props.datasource.name,\n            cityCoordinate:[this.props.datasource.coord.lon, this.props.datasource.coord.lat],\n            winddirection:this.props.datasource.wind.deg,\n            cityPool:[],\n            borderLine:[],\n\n            //new algorithm testing states\n            zoneData:[]\n        }\n}\n\ninitMap(){\n    return new window.google.maps.Map(this.googleMap.current,{\n        zoom: 8,\n        center:{ lat: this.state.cityCoordinate[1], lng:this.state.cityCoordinate[0] }, //reposition the centre\n      disableDefaultUI: true,\n    })\n}\n\ntargetedCityMarker(){\n    new window.google.maps.Marker({\n        position: { lat: this.state.cityCoordinate[1], lng:this.state.cityCoordinate[0] },\n        map:this.map_1\n    })\n}\n\ncityPoolPolyLine(){\n    let citypool_coordinates=[]\n    this.state.cityPool.map((i)=>{\n        citypool_coordinates.push(i.location)\n        return citypool_coordinates\n    })\n\n    console.log(this.state.borderLine)   //coordinates for creating border line\n    console.log(citypool_coordinates)    //coordinates of the cities in the city pool\n\n    let color_pool = [\"#2AA181\",\"#3FF0D0\",\"#B6C724\"]\n    for (let i=0;i<this.state.borderLine.length;i++){\n        new window.google.maps.Polyline({\n            path: this.state.borderLine[i],\n            geodesic: true,\n            strokeColor: color_pool[i],\n            strokeOpacity: 1.0,\n            strokeWeight: 2,\n            map:this.map_1\n        });\n    }\n}\n\ncomponentDidMount(){\n    axios.get('http://localhost:5000/weather/radar').then((res)=>{\n        console.log(res.data)\n        this.setState({\n            cityPool:res.data\n        })\n    })\n\n    for(let j=1;j<6;j++){\n        setTimeout(()=>{\n            axios.get('http://localhost:5000/weather/radar_2').then((res)=>{\n                this.setState({\n                    borderLine:res.data\n                })\n\n            console.log(this.state.cityCoordinate)  //for position in initMap() \n            console.log(this.state.borderLine) // for border polyline\n            })\n        },2500*j)\n    }\n\n    // const MapCode = document.createElement('script')\n    // MapCode.src =`https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}&libraries=&v=weekly`\n    // window.document.body.appendChild(MapCode)\n    \n\n    // MapCode.addEventListener('load',()=>{\n    //     this.map_1 = this.initMap()\n    //     this.targetedCity = this.targetedCityMarker()\n    //     for (let k=1;k<6;k++){\n    //         setTimeout(()=>{\n    //             this.predicting_region = this.cityPoolPolyLine()\n    //         },2500*k)\n    //     }\n    // })\n\n}\n    \n    render(){\n        return(\n            <div className='radar-page'>\n                <h1>Weather Radar</h1>\n                <p>City Coordinates:Lon: {this.state.cityCoordinate[0]}, Lat: {this.state.cityCoordinate[1]}</p>\n                <p>Wind Direction: {this.state.winddirection}˚ </p>\n                <div id='predictiveZones'>\n                    <p>Zone Data: {this.state.zoneData}</p>\n                </div>\n                <div id=\"google-map\" ref={this.googleMap} style={{ width: '800px', height: '600px' }} />\n            </div>\n        )\n    }\n}\n\nexport default Radar","import React, { Component } from 'react';\nimport ReactCSSTransitionGroup from 'react-transition-group';\nimport '../../stylessheet/dashboard.css'\n\nclass Dashboard extends Component {\n    constructor(props){\n        super(props)\n        //initialize methods\n        \n        //define states\n        this.state={\n            angle:-90,\n            display:0\n        }\n\n    }\n\n    pinMovement(){\n        let increment = 180/(this.props.range[1]-this.props.range[0])\n        let total = (this.props.nominal-this.props.range[0]) * increment\n        this.setState({\n            angle:this.state.angle+total,\n            display:total\n        })        \n    }\n\n    componentDidMount(){\n        this.pinMovement()\n    }\n\n    render(){\n        return(\n            <div className='dashboard-container'>\n                <div className = 'dashboard'>\n                    <div className ='shaft'></div>\n                    <div className ='pin'style={{\n                        transform:`rotate(${this.state.angle}deg)`\n                    }}>\n                    </div>\n                    <div className='title'>{this.props.nominal}{this.props.unit}</div>\n                    <div className='range1'>\n                        {this.props.range[0]}{this.props.unit}\n                    </div>\n                    <div className='range1p5'>\n                    </div>\n                    <div className='range2'>\n                        {this.props.range[1]}{this.props.unit}\n                    </div>\n                <div className = 'dashtext'>\n                    <p>{this.props.title}</p>\n                </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Dashboard","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Dashboard from \"./dashboard\"\nimport '../../stylessheet/analog.css'\n\nclass Analog extends Component {\n    constructor(props){\n        super(props)\n        //initialize the methods\n\n        //define the states here\n        this.state = {\n            cityname:\"\",\n            // (T - 273.15) is the actual temperature\n            temperature:Math.round(this.props.datasource.main.temp-273.15), //10˚C - 40˚C --> 0˚- 180˚\n            humidity:this.props.datasource.main.humidity,\n            windspeed:this.props.datasource.wind.speed,  //0km - 50km --> 0˚- 180˚\n            winddirection:this.props.datasource.wind.deg,\n        }\n    }\n\n    render(){\n        return(\n            <div className='analog-page'>\n                <h2 className='page-title'>Analog Weather Dashboard</h2>\n                <div className='dashboard-collection'>\n                    <div>\n                        <Dashboard nominal={this.state.temperature} range={[10,40]} unit={'˚C'} title={'Temperature'}/>\n                    </div>\n                    <div>\n                        <Dashboard nominal={this.state.humidity} range={[10,100]} unit={'%'} title={'Humidity'}/>\n                    </div>\n                    <div>\n                        <Dashboard nominal={Math.round(this.state.windspeed)*3.6} range={[0,50]} unit={'km'} title={'Windspeed'}/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Analog","import React, { Component } from 'react';\nimport { BrowserRouter as Router,Route,Link,Switch, BrowserRouter} from \"react-router-dom\" ;\nimport axios from 'axios';\n\nimport MainMenu from \"../component/userpanel/mainmenu\"\nimport Radar from \"../component/userpanel/radar\"\nimport Analog from \"../component/userpanel/analog\"\n\nimport '../stylessheet/userspanel.css'\n\n//Any state we need in here? \n//Let it just be a new navigation page, and put the states in the child branch pages\nclass UsersPanel extends Component{\n    constructor(props){\n        super(props)\n\n        this.state = {\n            weatherdata:\"\",\n            loaded:false\n        }\n    }\n\n    componentDidMount(){\n        axios.get('http://localhost:5000/weather/loggedin/citySearch').then((res)=>{\n            console.log(res.data)\n            this.setState({\n                weatherdata:res.data, //T, humidity, windspeed, wind-direction\n                loaded:true\n            })\n        })\n        \n    }\n\n    render(){\n        if(this.state.loaded===false&&this.state.weatherdata===\"\"){\n            return(\n                <div>\n                    <h3>Loading data</h3>\n                </div>\n            )\n        }else if(this.state.loaded===true&&this.state.weatherdata==='Error'){\n            return(\n                <div>\n                    <h3>Please Log into the System</h3>\n                </div>\n            )\n        }else{\n            return(\n                <div id='container'>\n                    <div className='location'>\n                        <h2>Location: {this.state.weatherdata.name},{this.state.weatherdata.sys.country}</h2>\n                    </div>\n                    <BrowserRouter>\n                        <Switch>\n                            <Route exact path = '/userspanel'>\n                                <MainMenu datasource={this.state.weatherdata}/>\n                            </Route>\n                            <Route path = '/userspanel/radar'>\n                                <Radar datasource={this.state.weatherdata} />\n                            </Route>\n                            <Route path = '/userspanel/analog'>\n                                <Analog datasource={this.state.weatherdata} />\n                            </Route>\n                            {/* in the component  */}\n                        </Switch>\n                    </BrowserRouter>\n                </div>\n            )\n        }\n    }\n}\n\nexport default UsersPanel","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter as Router,Route,Link,Switch, BrowserRouter} from \"react-router-dom\" ;\n\n\nimport Homepage from './component/homepage.js'\nimport LoginComponent from \"./component/logincomponent.js\"\nimport SignUpComponent from \"./component/signupcomponent.js\"\nimport CitySearch from \"./component/citysearch.js\"\nimport UsersPanel from \"./component/userspanel.js\"\n\n\n//this page is not a parenting component as it takes no user input which will be passed on to other\n//component later on\n\nfunction App() {\n  \n  return (\n    <div id='container'>\n      <BrowserRouter>\n        <Switch>\n          <Route exact path = '/'component={Homepage} />\n          <Route path='/Login' component={LoginComponent}/>\n          <Route path='/SignUp'component={SignUpComponent}/>\n          <Route path='/citySearch'component={CitySearch}/>\n          <Route path='/usersPanel'component={UsersPanel}/>\n        </Switch>\n      </BrowserRouter>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}